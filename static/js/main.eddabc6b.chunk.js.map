{"version":3,"sources":["components/cards/cards.module.css","components/cards/cards.component.jsx","api/index.js","components/chart/chart.component.jsx","components/country-picker/country-picker.component.jsx","App.js","index.js","App.module.css","components/chart/chart.module.css","components/country-picker/country-picker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","state","this","setState","props","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","React","Component","CountryPicker","FormControl","formControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","i","key","App","fetchedData","image","src","coronaImage","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eddabc6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containder\":\"cards_containder__2HxL4\",\"card\":\"cards_card__1ZeEC\",\"infected\":\"cards_infected__lhsAb\",\"recovered\":\"cards_recovered__9M6ZP\",\"deaths\":\"cards_deaths__3do4W\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nimport styles from \"./cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={30} justify=\"center\">\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textPrimary\" >\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textPrimary\">\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textPrimary\">\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country) {\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n  \r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries }} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n\r\n  } catch (err) {\r\n    console.log(\"error\", err);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./chart.module.css\";\r\n\r\nclass Chart extends React.Component {\r\n  state = {\r\n    dailyData: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let dailyData = await fetchDailyData();\r\n    this.setState({ dailyData: dailyData });\r\n  }\r\n\r\n  render() {\r\n    let { dailyData } = this.state;\r\n    let { data, country } = this.props;\r\n\r\n    const lineChart = dailyData ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255,0,0,0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n    const barChart = data.confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n          datasets: [\r\n            {\r\n              //label: \"People\",\r\n              labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n              backgroundColor: [\r\n                \"rgba(0,0,255,0.5)\",\r\n                \"rgba(0,255,0,0.5)\",\r\n                \"rgba(255,0,0,0.5)\",\r\n              ],\r\n              data: [data.confirmed.value, data.recovered.value, data.deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          title: {\r\n            display: true,\r\n            text: `Current state in ${this.props.country}`,\r\n          },\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n    return (\r\n      <div className={styles.container}>{country ? barChart: lineChart} </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./country-picker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nclass CountryPicker extends React.Component {\r\n    state = {\r\n      countries: [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n    let countries = await fetchCountries();\r\n    this.setState({ countries: countries });\r\n  }\r\n\r\n  render() {\r\n    let countries = this.state.countries;\r\n    return (\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e) => this.props.handleCountryChange(e.target.value)}>\r\n          <option value=\"\">Global</option>\r\n          {countries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\n\r\nimport { fetchData } from \"./api\";\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM, { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__24c4Z\",\"image\":\"App_image__2U973\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__2RdW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"country-picker_formControl__2uKps\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}